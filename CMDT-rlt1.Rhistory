q()
source('http://Bioconductor.org/biocLite.R');
biocLite()
biocLite()
pkgs <- rownames(installed.packages())
packages_1=c("Biobase","CLL","simpleaffy", "affyPLM", "RColorBrewer","affy",
"gcrma","graph", "GenomicRanges","affycoretools","limma","annotate",
"hgu95av2.db","GOstats","GeneAnswers","pheatmap","Rgraphviz","GEOquery")
packages_2=setdiff(packages_1,pkgs)
biocLite(packages_2)
q()
help rpart
?rpart
??rpart
library("rpart", lib.loc="C:/Program Files/R/R-3.4.3/library")
library('party')
q()
pnorm(1.96)
pnorm(-1.96)
pnorm(-3)
pnorm(1.96,lower.tail=T)
pnorm(1.96,lower.tail=F)
qnorm(0.05)
qnorm(-0.05)
qnorm(0.95)
qnorm(1-0.025)
qnorm(0.025)
qt(0.2,1)
qt(0.8,1)
pf(0.95,2,1)
pf(0.99,2,1)
pf(0.99,2,2)
pf(1-0.99,2,2)
pf(0.99,10,9)
qf(0.99,10,9)
qchisq(0.95,1)
a <- c(79.6,87,81.8,91.7,82.8,88.1,86.9,82.3,77.3,85.8)
b <- c(83,87.8,87.5,91.1,87.8,84.1,87.1,83,85.9,85.9)
?t.test
t.test(a,b)
a <- c(67.4,72.8,68.4,66,70.8,69.6,67.2,68.9,62.6)
b <- c(60.6,66.6,64.9,61.8,61.7,67.2,62.4,61.3,56.7)
t.test(a, b, alternative = "greater", mu = 5, paired = TRUE)
pt(0.87,8)
1-pt(0.87,8)
1-pt(0.87167,8)
pt(-0.87167,8)
y <- c(18,21,20,13,20,24,26,22,10,15,17,14,28,27,29,32)
drugs <- rep(1:4, each=4)
drugs
result <- aov(y ~ drugs)
aov(y ~ drugs)
summary(y)
summary(result)
drugs <- factor(rep(1:4, each=4))
result <- aov(y ~ drugs)
summary(result)
drugs
168/8.17
fertilizer <- gl(3,9,labels = c("A1","A2","A3"))
gl(3,9,labels = c("A1","A2","A3"))
chisq.test(c(3437,3482), p=c(0.5,0.5))
chisq.test(c(491,76,90,86), p=c(9/16,3/16,3/16,1/16))
four_table <- matrix(c(146,7,7,183,9,13,152,14,16),nrow = 3, byrow = T)
four_table
chisq.test(four_table)
a
b
cor(a,b)
x<-cor(a,b)
x
summary(x)
x<-c(35.5,34.1,31.7,40.3,36.8,40.2,31.7,39.2,44.2)
y<-c(12,16,9,2,7,3,13,9,-1)
myfit<-lm(y~x,data.frame(x,y))
myfit
summary(myfit)
q()
q()
#####################
data<-read.table("data",header=T,row.names="Model")
View(data)
data[1,1]
data
data[1:14,1:8"]
]
data[1:14,1:8]
data[1:14,2:8]
data[2,2:8]
dim(exp)
exp<-data[,1:8]
dim(exp)
head(exp)
install.packages("pheatmap")
library(pheatmap)
pheatmap(exp)
pheatmap(exp,cluster_rows=F,cluster_cols=F)
pheatmap(exp,cluster_rows=F,cluster_cols=F,display_numbers=T)
pheatmap(exp,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize=12)
pheatmap(exp,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=20)
pheatmap(exp,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15)
pheatmap(exp,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20)
pheatmap(exp,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20)

data2<-read.table("data2.txt",header=T,row.names="Model")
pheatmap(data2,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20)
pheatmap(data2,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,scale="colum")
pheatmap(data2,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,scale="column")
pheatmap(data2,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,scale="colum")
pheatmap(data2,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20)
pheatmap(data,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,legend_breaks=0:60)
pheatmap(data,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,legend_breaks=0:60,legend_labels=0:60)
pheatmap(data,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,legend_breaks=seq(0,60,10),legend_labels=seq(0,60,10))
pheatmap(data,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,legend_breaks=seq(0,60,10),legend_labels=seq(0,60,10))

mydata<-cbind(data,data2)


colnames(mydata)<-c("Waveform.noise","Wine","ForestTypes","Vehicle","GasSensor","SatImage","Segment","Average(balanced)","Cardiotocography","PageBlocks","First.order.Theorem", "Glass","Average(imbalanced)")
View(annotation_col)
View(mydata)
rownames(annotation_col) =colnames(mydata)
View(annotation_col)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,annotation_col=annotation_col)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,annotation_col=annotation_col,cutree_cols=2)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,annotation_col=annotation_col,cutree_cols=2)
pheatmap(mydata,cluster_rows=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,annotation_col=annotation_col,cutree_cols=2)
pheatmap(mydata,cluster_rows=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,annotation_col=annotation_col,cutree_cols=3)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,annotation_col=annotation_col,cutree_cols=2)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,annotation_col=annotation_col)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=18,fontsize_col=18,annotation_col=annotation_col)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize=15,annotation_col=annotation_col)
annotation_col = data.frame(DataType = factor(c(rep("Balance data sets", 8),rep("Imbalance data sets", 5))))
View(annotation_col)
rownames(annotation_col) =colnames(mydata)
View(annotation_col)
pheatmap(mydata,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize=15,annotation_col=annotation_col,gaps_col = 8)
q()
########################################################################%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
rlt2：
library(reshape2)
library(ggplot2)
library(dplyr)
data<-read.table("rlt2_wf_wa.txt",header=T)
mydata<-melt(data,id.vars="ratios",variable.name="Methods",value.name="WA_Score")
mydata$ratios<-factor(mydata$ratios,order=T,levels=c("2:1","5:1","10:1"))
fig<-ggplot(mydata,aes(Methods,WA_Score,fill=ratios))+geom_bar(stat="identity",position="stack")+scale_fill_discrete(labels=levels(mydata$ratios))+geom_text(aes(label=WA_Score),position=position_stack(vjust=0.5))+ggtitle("WA for Waveform+noise")+scale_y_continuous(name='WA Score')

data<-read.table("rlt2_wf_ac.txt",header=T)
mydata<-melt(data,id.vars="ratios",variable.name="Methods",value.name="AC_Score")
mydata$ratios<-factor(mydata$ratios,order=T,levels=c("2:1","5:1","10:1"))
fig<-ggplot(mydata,aes(Methods,AC_Score,fill=ratios))+geom_bar(stat="identity",position="stack")+scale_fill_discrete(labels=levels(mydata$ratios))+geom_text(aes(label=AC_Score),position=position_stack(vjust=0.5))+ggtitle("AC for Waveform+noise")+scale_y_continuous(name='AC Score')

############%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
library(reshape2)
library(ggplot2)
library(dplyr)
data<-read.table("all_average.txt",header=T)
mydata<-melt(data,id=c("Metric","ratios"))
mydata$ratios<-factor(mydata$ratios,order=T,levels=c("2:1","5:1","10:1"))
mydata$Metric<-factor(mydata$Metric,order=T,levels=c("WA","AC"))
colnames(mydata)<-c("Metric","ratios","Methods","Score")
### fig<-ggplot(mydata, aes(x = Metric, y = Score, fill = ratios))+geom_bar(stat = "identity", width = 1, position = "stack" )+facet_grid(. ~ Methods,scales = "free_x")+theme(axis.text.x =element_blank())
fig<-ggplot(mydata, aes(x = Metric, y = Score, fill = ratios))+geom_bar(stat = "identity", width = 1, position = "stack" )+facet_grid(. ~ Methods,scales = "free_x")+scale_fill_discrete(labels=levels(mydata$ratios))+geom_text(aes(label=Score),position=position_stack(vjust=0.5))+ggtitle("WA and AC for all_average")+scale_y_continuous(name='Score')

fig2<-fig+theme(axis.title.x =element_text(size=14), axis.title.y=element_text(size=14))
fig2<- fig2+theme(axis.text=element_text(size=24))
fig2<- fig+theme(text=element_text(size=24))
###############################
library(reshape2)
library(ggplot2)
data<-read.table("data_imbalance",header=T,row.names="Model")
data$Models<-rownames(data)
 mydata<-melt(data,id.vars="Models",variable.name="Datasets",value.name="Differences")
p <- ggplot(mydata, aes(x=Datasets,y=Models))
p <- p + geom_tile(aes(fill=Differences))
p <- p + scale_fill_gradient(low = "blue", high = "red")


###p <- p + theme(axis.text.x=element_text(angle=45,hjust=1, vjust=1))
###hjust是水平的对齐方式，0为左，1为右，0.5居中，0-1之间可以取任意值。vjust是垂直对齐方式，0底对齐，1为顶对齐，0.5居中，0-1之间可以取任意值

#############################################
library(grid)
library(pheatmap)
setHook("grid.newpage", function() pushViewport(viewport(x=1,y=1,width=0.9, height=0.9, name="vp", just=c("right","top"))), action="prepend")
pheatmap(data,cluster_rows=F,cluster_cols=F,display_numbers=T,fontsize_number=15,fontsize_row=20,fontsize_col=20,show_colnames = F)
grid.text("WN", y=-0.02, x=0.08,rot=0, gp=gpar(fontsize=20))
grid.text("GS", y=-0.02, x=0.20,rot=0, gp=gpar(fontsize=20))
grid.text("SI", y=-0.02, x=0.32,rot=0, gp=gpar(fontsize=20))
grid.text("SE", y=-0.02, x=0.46,rot=0, gp=gpar(fontsize=20))
grid.text("Average", y=-0.02, x=0.62,rot=0, gp=gpar(fontsize=20))





############%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
library(reshape2)
library(ggplot2)
library(dplyr)
data<-read.table("qianxi.txt",header=T)
mydata<-melt(data,id=c("Move.orientation","Region"))
mydata$variable<-as.Date(mydata$variable,"X%d")-31


mydata$per<-NA
mydata$per[c(1,2,4,5,7,8,10,11,13,14,16,17,19,20)]<-c('30%','70%','30%','70%','26%','74%','28%','72%','25%','75%','23%','77%','27%','73%')
colnames(mydata)<-c("Move.orientation","Region","Date","Population.ten.thousand","per")
fig<-ggplot(mydata, aes(x = Move.orientation, y = Population.ten.thousand, fill = Region))+geom_bar(stat = "identity", width = 1, position = "stack" )+facet_grid(. ~ Date,scales = "free_x")+scale_fill_discrete(labels=levels(mydata$Region))+geom_text(aes(label=per),position=position_stack(vjust=0.5))+ggtitle("Population mobility for Wuhan")+scale_y_continuous(name='Population/ten thousand')+scale_x_discrete(label=sample(' ',size = 24,replace = T),name="Move orientation")

fig<-ggplot(mydata, aes(x = Move.orientation, y = Population.ten.thousand, fill = Region))+geom_bar(stat = "identity", width = 1, position = "stack" )+facet_grid(. ~ Date,scales = "free_x")+scale_fill_discrete(labels=c('Moved from Wuhan to Hubei','Moved from Wuhan to non-Hubei','Move to Wuhan'))+geom_text(aes(label=per),position=position_stack(vjust=0.5))+ggtitle("Population mobility for Wuhan")+scale_y_continuous(name='Population/ten thousand')+scale_x_discrete(label=sample(' ',size = 24,replace = T),name="Dates")+theme(legend.position =c(0.86,0.86))+guides(fill=guide_legend(title="Migration direction"))

fig2<-fig+theme(axis.title.x =element_text(size=14), axis.title.y=element_text(size=14))
fig2<- fig2+theme(axis.text=element_text(size=24))
fig2<- fig+theme(text=element_text(size=24))

scale_x_discrete(
  breaks = c('1月天气预报','2月天气预报','3月天气预报'),
  label = c('1月\n天气预报','2月\n天气预报','3月\n天气预报')
)
theme(legend.position =c(0.94,0.92),legend.background = element_rect(size =0.5, colour = "black"))
guides(fill=guide_legend(title="New Legend Title"))
